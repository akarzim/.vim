#!/usr/bin/env ruby

tips = [
  "Tip 1 │  Care About Your Craft",
  "Tip 2 │  Think! About Your Work",
  "Tip 3 │  You Have Agency",
  "Tip 4 │  Provide Options, Don’t Make Lame Excuses",
  "Tip 5 │  Don’t Live with Broken Windows",
  "Tip 6 │  Be a Catalyst for Change",
  "Tip 7 │  Remember the Big Picture",
  "Tip 8 │  Make Quality a Requirements Issue",
  "Tip 9 │  Invest Regularly in Your Knowledge Portfolio",
  "Tip 10 │  Critically Analyze What You Read and Hear",
  "Tip 11 │  English is Just Another Programming Language",
  "Tip 12 │  It’s Both What You Say and the Way You Say It",
  "Tip 13 │  Build Documentation In, Don’t Bolt It On",
  "Tip 14 │  Good Design Is Easier to Change Than Bad Design",
  "Tip 15 │  DRY—Don’t Repeat Yourself",
  "Tip 16 │  Make It Easy to Reuse",
  "Tip 17 │  Eliminate Effects Between Unrelated Things",
  "Tip 18 │  There Are No Final Decisions",
  "Tip 19 │  Forgo Following Fads",
  "Tip 20 │  Use Tracer Bullets to Find the Target",
  "Tip 21 │  Prototype to Learn",
  "Tip 22 │  Program Close to the Problem Domain",
  "Tip 23 │  Estimate to Avoid Surprises",
  "Tip 24 │  Iterate the Schedule with the Code",
  "Tip 25 │  Keep Knowledge in Plain Text",
  "Tip 26 │  Use the Power of Command Shells",
  "Tip 27 │  Achieve Editor Fluency",
  "Tip 28 │  Always Use Version Control",
  "Tip 29 │  Fix the Problem, Not the Blame",
  "Tip 30 │  Don’t Panic",
  "Tip 31 │  Failing Test Before Fixing Code",
  "Tip 32 │  Read the Damn Error Message",
  "Tip 33 │  “select” Isn’t Broken",
  "Tip 34 │  Don’t Assume It—Prove It",
  "Tip 35 │  Learn a Text Manipulation Language",
  "Tip 36 │  You Can’t Write Perfect Software",
  "Tip 37 │  Design with Contracts",
  "Tip 38 │  Crash Early",
  "Tip 39 │  Use Assertions to Prevent the Impossible",
  "Tip 40 │  Finish What You Start",
  "Tip 41 │  Act Locally",
  "Tip 42 │  Take Small Steps—Always",
  "Tip 43 │  Avoid Fortune-Telling",
  "Tip 44 │  Decoupled Code Is Easier to Change",
  "Tip 45 │  Tell, Don’t Ask",
  "Tip 46 │  Don’t Chain Method Calls",
  "Tip 47 │  Avoid Global Data",
  "Tip 48 │  If It’s Important Enough to Be Global, Wrap It in an API",
  "Tip 49 │  Programming Is About Code, But Programs Are About Data",
  "Tip 50 │  Don’t Hoard State; Pass It Around",
  "Tip 51 │  Don’t Pay Inheritance Tax",
  "Tip 52 │  Prefer Interfaces to Express Polymorphism",
  "Tip 53 │  Delegate to Services: Has-A Trumps Is-A",
  "Tip 54 │  Use Mixins to Share Functionality",
  "Tip 55 │  Parameterize Your App Using External Configuration",
  "Tip 56 │  Analyze Workflow to Improve Concurrency",
  "Tip 57 │  Shared State Is Incorrect State",
  "Tip 58 │  Random Failures Are Often Concurrency Issues",
  "Tip 59 │  Use Actors For Concurrency Without Shared State",
  "Tip 60 │  Use Blackboards to Coordinate Workflow",
  "Tip 61 │  Listen to Your Inner Lizard",
  "Tip 62 │  Don’t Program by Coincidence",
  "Tip 63 │  Estimate the Order of Your Algorithms",
  "Tip 64 │  Test Your Estimates",
  "Tip 65 │  Refactor Early, Refactor Often",
  "Tip 66 │  Testing Is Not About Finding Bugs",
  "Tip 67 │  A Test Is the First User of Your Code",
  "Tip 68 │  Build End-to-End, Not Top-Down or Bottom Up",
  "Tip 69 │  Design to Test",
  "Tip 70 │  Test Your Software, or Your Users Will",
  "Tip 71 │  Use Property-Based Tests to Validate Your Assumptions",
  "Tip 72 │  Keep It Simple and Minimize Attack Surfaces",
  "Tip 73 │  Apply Security Patches Quickly",
  "Tip 74 │  Name Well; Rename When Needed",
  "Tip 75 │  No One Knows Exactly What They Want",
  "Tip 76 │  Programmers Help People Understand What They Want",
  "Tip 77 │  Requirements Are Learned in a Feedback Loop",
  "Tip 78 │  Work with a User to Think Like a User",
  "Tip 79 │  Policy Is Metadata",
  "Tip 80 │  Use a Project Glossary",
  "Tip 81 │  Don’t Think Outside the Box. Find the Box",
  "Tip 82 │  Don’t Go into the Code Alone",
  "Tip 83 │  Agile Is Not a Noun; Agile Is How You Do Things",
  "Tip 84 │  Maintain Small, Stable Teams",
  "Tip 85 │  Schedule It to Make It Happen",
  "Tip 86 │  Organize Fully Functional Teams",
  "Tip 87 │  Do What Works, Not What’s Fashionable",
  "Tip 88 │  Deliver When Users Need It",
  "Tip 89 │  Use Version Control to Drive Builds, Tests, and Releases",
  "Tip 90 │  Test Early, Test Often, Test Automatically",
  "Tip 91 │  Coding Ain’t Done ’Til All the Tests Run",
  "Tip 92 │  Use Saboteurs to Test Your Testing",
  "Tip 93 │  Test State Coverage, Not Code Coverage",
  "Tip 94 │  Find Bugs Once",
  "Tip 95 │  Don’t Use Manual Procedures",
  "Tip 96 │  Delight Users, Don’t Just Deliver Code",
  "Tip 97 │  Sign Your Work",
  "Tip 98 │  First, Do No Harm",
  "Tip 99 │  Don’t Enable Scumbags",
  "Tip 100 │  It’s Your Life. Share it. Celebrate it. Build it. AND HAVE FUN!"
]

puts ARGV[0] ? tips[ARGV[0].to_i] : tips.sample
